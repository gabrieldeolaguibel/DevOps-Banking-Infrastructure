name: ie-bank-infra

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
  workflow_dispatch:

env:
  RESOURCE_GROUP_DEV: aguadamillas_students_1
  RESOURCE_GROUP_UAT: aguadamillas_students_2
  SUBSCRIPTION_ID_DEV: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  SUBSCRIPTION_ID_UAT: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  USER_ALIAS: barbie
  LOCATION: centralus

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Run Bicep linter
        run: az bicep build --file ./main.bicep

  deploy-key-vault-and-acr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Key Vault and ACR
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
          template: ./key-vault.bicep
          parameters: ./parameters/key-vault.parameters.json location=${{ env.LOCATION }}
          deploymentName: keyvaultacr-${{ github.run_id }}.global
          failOnStdErr: false

  deploy-dev:
    if: startsWith(github.ref, 'refs/heads/feature/') || github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Development"
    env:
      ENV: dev
    steps:
      - uses: actions/checkout@main
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
          template: ./main.bicep
          parameters: ./parameters/dev.parameters.json location=${{ env.LOCATION }}
          deploymentName: ${{ env.USER_ALIAS }}.${{ github.run_id }}.dev
          failOnStdErr: false


  deploy-uat:
    if: github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    needs: [build, deploy-dev]
    environment:
      name: "User Acceptance Testing"
    env:
      ENV: uat
    steps:
      - uses: actions/checkout@main
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_UAT }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_UAT }}
          template: ./main.bicep
          parameters: ./parameters/uat.parameters.json location=${{ env.LOCATION }}
          deploymentName: ${{ env.USER_ALIAS }}.${{ github.run_id }}.uat
          failOnStdErr: false

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build, deploy-uat]
    environment:
      name: "Production"
    env:
      ENV: prod
    steps:
      - uses: actions/checkout@main
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_UAT }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_UAT }}
          template: ./main.bicep
          parameters: ./parameters/prod.parameters.json location=${{ env.LOCATION }}
          deploymentName: ${{ env.USER_ALIAS }}.${{ github.run_id }}.prod
          failOnStdErr: false